{"generator":"Code Snippets v3.6.8","date_created":"2025-06-13 05:54","snippets":[{"id":62,"name":"hide the add to cart notification if product is already in stock","code":"\nadd_action('wp_footer', function () {\n    ?>\n    <script>\n    document.addEventListener('DOMContentLoaded', function () {\n        \/\/ Helper: as soon as any <li class=\"woocommerce-error\"> is added, alert + hide .notiny-container\n        function onWooErrorNode(node) {\n            if (node.nodeType !== 1) return;\n\n            \/\/ Case A: A single <li class=\"woocommerce-error\"> was just added\n            if (node.matches('.woocommerce-error li')) {\n\/\/                 alert('Error detected in WooCommerce!');\n                document.querySelectorAll('.notiny-container').forEach(function(el){\n                    el.style.display = 'none';\n                    el.style.visibility = 'hidden';\n                    el.style.opacity = '0';\n                });\n                return;\n            }\n\n            \/\/ Case B: An entire <ul class=\"woocommerce-error\"> was added\n            if (node.matches('.woocommerce-error')) {\n                node.querySelectorAll('li').forEach(function(innerLi){\n\/\/                     alert('Error detected in WooCommerce!');\n                    document.querySelectorAll('.notiny-container').forEach(function(el){\n                        el.style.display = 'none';\n                        el.style.visibility = 'hidden';\n                        el.style.opacity = '0';\n                    });\n                });\n            }\n        }\n\n        \/\/ 1) Initial check (in case an error is already on the page when it loads)\n        document.querySelectorAll('.woocommerce-error li').forEach(function(li){\n            onWooErrorNode(li);\n        });\n\n        \/\/ 2) Observe the notices wrapper for dynamically added WooCommerce errors (AJAX, etc.)\n        const wrapper = document.querySelector('.woocommerce-notices-wrapper');\n        if (wrapper) {\n            const observer = new MutationObserver(function (mutations) {\n                mutations.forEach(function (mutation) {\n                    mutation.addedNodes.forEach(onWooErrorNode);\n                });\n            });\n            observer.observe(wrapper, { childList: true, subtree: true });\n        }\n    });\n    <\/script>\n    <?php\n});\n","active":true,"priority":25,"modified":"2025-06-08 06:36:38","revision":"111"}]}