{"generator":"Code Snippets v3.6.8","date_created":"2025-06-13 05:54","snippets":[{"id":67,"name":"remove product from minicart using ajax","code":"\nadd_action('wp_enqueue_scripts', 'custom_minicart_ajax_remove_script');\nfunction custom_minicart_ajax_remove_script() {\n    wp_enqueue_script('jquery');\n\n    $inline_js = \"\n        jQuery(document).ready(function($) {\n            $(document).on('click', '.remove_from_cart_button', function(e) {\n                e.preventDefault();\n\n                var \\$this = $(this);\n                var cart_item_key = \\$this.data('cart_item_key');\n\n                $.ajax({\n                    url: minicart_ajax_obj.ajax_url,\n                    type: 'POST',\n                    data: {\n                        action: 'remove_minicart_item',\n                        nonce: minicart_ajax_obj.nonce,\n                        cart_item_key: cart_item_key\n                    },\n                    success: function(response) {\n                        if (response.success) {\n                            \/\/ Update minicart content\n                            $('.widget_shopping_cart_content').html(response.data.minicart);\n\n                            \/\/ Update cart count and total if needed\n                            if (response.data.cart_count === 0) {\n                                $('.cart-count').text('0');\n                                $('.widget_shopping_cart_content').html('<p class=\\\"woocommerce-mini-cart__empty-message\\\">No products in the cart.<\/p>');\n                            } else {\n                                $('.cart-count').text(response.data.cart_count);\n                            }\n                            $('.cart-total').html(response.data.cart_total);\n\n                            \/\/ Trigger WooCommerce events for compatibility\n                            $(document.body).trigger('wc_fragment_refresh');\n                            $(document.body).trigger('removed_from_cart', [response, cart_item_key]);\n                        } else {\n                            console.log('Error: ' + response.data.message);\n                        }\n                    },\n                    error: function(xhr, status, error) {\n                        console.log('AJAX error: ' + error);\n                    }\n                });\n            });\n        });\n    \";\n\n    wp_add_inline_script('jquery', $inline_js);\n\n    wp_localize_script('jquery', 'minicart_ajax_obj', array(\n        'ajax_url' => admin_url('admin-ajax.php'),\n        'nonce'    => wp_create_nonce('remove_minicart_item_nonce')\n    ));\n}\n\n\/\/ AJAX handler to remove item from minicart\nadd_action('wp_ajax_remove_minicart_item', 'custom_remove_minicart_item');\nadd_action('wp_ajax_nopriv_remove_minicart_item', 'custom_remove_minicart_item');\nfunction custom_remove_minicart_item() {\n    check_ajax_referer('remove_minicart_item_nonce', 'nonce');\n\n    if (isset($_POST['cart_item_key'])) {\n        $cart_item_key = sanitize_text_field($_POST['cart_item_key']);\n        if (WC()->cart->remove_cart_item($cart_item_key)) {\n            \/\/ Get updated minicart content\n            ob_start();\n            woocommerce_mini_cart();\n            $minicart_content = ob_get_clean();\n\n            wp_send_json_success(array(\n                'minicart' => $minicart_content,\n                'cart_count' => WC()->cart->get_cart_contents_count(),\n                'cart_total' => WC()->cart->get_cart_total()\n            ));\n        } else {\n            wp_send_json_error(array('message' => 'Failed to remove item.'));\n        }\n    } else {\n        wp_send_json_error(array('message' => 'Invalid cart item key.'));\n    }\n\n    wp_die();\n}\n","active":true,"modified":"2025-06-06 21:06:23","revision":"3"}]}