{"generator":"Code Snippets v3.6.8","date_created":"2025-06-13 05:52","snippets":[{"id":32,"name":"sorting button on cat and shop pages before products","code":"\/\/ 1. Add custom sorting options (with labels in Norwegian)\nadd_filter('woocommerce_catalog_orderby', 'custom_woocommerce_catalog_orderby');\nfunction custom_woocommerce_catalog_orderby($sortby) {\n    $sortby = array(); \/\/ Clear default options\n\n    $sortby['menu_order']   = 'Mest relevant';\n    $sortby['popularity']   = 'Bestselgere';\n    $sortby['price']        = 'Pris lav\u2013h\u00f8y';\n    $sortby['price-desc']   = 'Pris h\u00f8y\u2013lav';\n    $sortby['discount']     = 'H\u00f8yest rabatt';\n\n    return $sortby;\n}\n\n\/\/ 2. Adjust query parameters for sorting options\nadd_action('woocommerce_product_query', 'custom_sorting_logic');\nfunction custom_sorting_logic($query) {\n    if (is_admin() || !$query->is_main_query()) return;\n\n    if (isset($_GET['orderby'])) {\n        switch ($_GET['orderby']) {\n            case 'price':\n                $query->set('orderby', 'meta_value_num');\n                $query->set('meta_key', '_price');\n                $query->set('order', 'ASC');\n                break;\n\n            case 'price-desc':\n                $query->set('orderby', 'meta_value_num');\n                $query->set('meta_key', '_price');\n                $query->set('order', 'DESC');\n                break;\n\n            case 'discount':\n                \/\/ Use a meta query to sort by _max_discount_percent (for variable products) or _discount_percent (for simple products)\n                $query->set('meta_query', array(\n                    'relation' => 'OR',\n                    array(\n                        'key' => '_max_discount_percent', \/\/ For variable products\n                        'compare' => 'EXISTS',\n                    ),\n\/\/                     array(\n\/\/                         'key' => '_max_discount_percent',\n\/\/                         'compare' => 'NOT EXISTS',\n\/\/                         'value' => '0', \/\/ Fallback to _discount_percent if _max_discount_percent doesn't exist\n\/\/                     ),\n                    array(\n                        'key' => '_discount_percent', \/\/ For simple products\n                        'compare' => 'EXISTS',\n                    ),\n\/\/                     array(\n\/\/                         'key' => '_discount_percent',\n\/\/                         'compare' => 'NOT EXISTS',\n\/\/                         'value' => '0', \/\/ Fallback for products with no discount\n\/\/                     ),\n                ));\n                \/\/ Sort by both keys, prioritizing _max_discount_percent for variable products\n                $query->set('orderby', array(\n                    'meta_value_num' => 'DESC',\n                ));\n                $query->set('meta_key', '_max_discount_percent'); \/\/ Primary sort key for variable products\n                break;\n\n            case 'menu_order':\n                $query->set('orderby', 'menu_order');\n                $query->set('order', 'ASC');\n                break;\n\n            default:\n                break;\n        }\n    }\n}\n\n\/\/ 3. Calculate and save discount percentage for simple products and variations\nadd_action('save_post_product', 'update_discount_percent_meta', 10, 1);\nadd_action('woocommerce_update_product_variation', 'update_discount_percent_meta', 10, 1);\nfunction update_discount_percent_meta($post_id) {\n    if (wp_is_post_revision($post_id)) return;\n\n    $product = wc_get_product($post_id);\n    if (!$product) return;\n\n    \/\/ Calculate discount for the product or variation\n    $regular_price = $product->get_regular_price();\n    $sale_price = $product->get_sale_price();\n    $discount_percent = 0;\n\n    if (is_numeric($regular_price) && is_numeric($sale_price) && $regular_price > 0 && $sale_price >= 0 && $sale_price < $regular_price) {\n        $discount_percent = (($regular_price - $sale_price) \/ $regular_price) * 100;\n    }\n\n    update_post_meta($post_id, '_discount_percent', round($discount_percent));\n\n    \/\/ If this is a variation, update the parent product's max discount\n    if ($product->is_type('variation')) {\n        $parent_id = $product->get_parent_id();\n        update_max_discount_for_variable_product($parent_id);\n    }\n}\n\n\/\/ 4. Function to calculate and store the maximum discount for variable products\nfunction update_max_discount_for_variable_product($parent_id) {\n    $product = wc_get_product($parent_id);\n    if (!$product || !$product->is_type('variable')) return;\n\n    $variations = $product->get_available_variations();\n    $max_discount = 0;\n\n    foreach ($variations as $variation) {\n        $variation_id = $variation['variation_id'];\n        $discount = (float) get_post_meta($variation_id, '_discount_percent', true);\n        if ($discount > $max_discount) {\n            $max_discount = $discount;\n        }\n    }\n\n    \/\/ Store the maximum discount for the variable product\n    update_post_meta($parent_id, '_max_discount_percent', $max_discount);\n}\n\n\/\/ 5. One-time script to update existing products and variations (run once, then remove)\n\/\/ function update_all_product_discounts() {\n\/\/     \/\/ Update simple and variable products\n\/\/     $products = get_posts([\n\/\/         'post_type' => 'product',\n\/\/         'posts_per_page' => -1,\n\/\/         'post_status' => 'publish',\n\/\/     ]);\n\/\/     foreach ($products as $product) {\n\/\/         $product_obj = wc_get_product($product->ID);\n\/\/         if ($product_obj->is_type('variable')) {\n\/\/             $variations = $product_obj->get_available_variations();\n\/\/             foreach ($variations as $variation) {\n\/\/                 update_discount_percent_meta($variation['variation_id']);\n\/\/             }\n\/\/             \/\/ Update the max discount for the variable product\n\/\/             update_max_discount_for_variable_product($product->ID);\n\/\/         } else {\n\/\/             update_discount_percent_meta($product->ID);\n\/\/         }\n\/\/     }\n\/\/ }\n\/\/ add_action('init', 'update_all_product_discounts');\n\n\/\/ 6. Custom dropdown for sorting (same as before)\nfunction modify_wc_ordering() {\n    ?>\n    <script>\n        jQuery(document).ready(function($) {\n            function initializeCustomDropdown() {\n                const $orderingForm = $('.woocommerce-ordering');\n                const $select = $orderingForm.find('select.orderby');\n\n                if ($select.length && !$orderingForm.hasClass('custom-dropdown-initialized')) {\n                    $select.hide();\n                    const $customDropdown = $('<div class=\"custom-orderby-dropdown\"><\/div>');\n                    const $trigger = $('<div class=\"custom-orderby-trigger\">' + $select.find('option:selected').text() + '<\/div>');\n                    const $menu = $('<ul class=\"custom-orderby-menu\"><\/ul>');\n\n                    $select.find('option').each(function() {\n                        const $item = $('<li class=\"custom-orderby-item\"><\/li>')\n                            .text($(this).text())\n                            .data('value', $(this).val())\n                            .addClass($(this).is(':selected') ? 'selected' : '');\n                        $menu.append($item);\n                    });\n\n                    $customDropdown.append($trigger).append($menu);\n                    $orderingForm.append($customDropdown);\n                    $orderingForm.addClass('custom-dropdown-initialized');\n\n                    $trigger.on('click', function() {\n                        $customDropdown.toggleClass('open');\n                        $menu.toggleClass('is-open');\n                    });\n\n                    $menu.on('click', '.custom-orderby-item', function() {\n                        const $item = $(this);\n                        $trigger.text($item.text());\n                        $select.val($item.data('value')).trigger('change');\n                        $menu.find('.custom-orderby-item').removeClass('selected');\n                        $item.addClass('selected');\n                        $customDropdown.removeClass('open');\n                        $menu.removeClass('is-open');\n                    });\n\n                    $(document).on('click', function(e) {\n                        if (!$customDropdown.is(e.target) && $customDropdown.has(e.target).length === 0 && $customDropdown.hasClass('open')) {\n                            $customDropdown.removeClass('open');\n                            $menu.removeClass('is-open');\n                        }\n                    });\n                }\n            }\n\n            initializeCustomDropdown();\n            $(document).on('wc_fragments_refreshed wc_fragments_loaded', initializeCustomDropdown);\n        });\n    <\/script>\n\n    <style>\n        .custom-orderby-dropdown {\n            position: relative;\n            display: inline-block;\n\/*             width: 175px; *\/\n        }\n\n        .custom-orderby-trigger {\n            padding: 5px;\n            color: #000;\n        }\n        .custom-orderby-trigger:after {\n            padding-left: 4px;\n            content: '\\f107';\n            font-family: \"Font Awesome 6 Free\";\n        }\n\n        .custom-orderby-menu {\n            box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 6px;\n            display: none;\n            position: absolute;\n            top: 100%;\n\/*             left: 0; *\/\n\t\t\tright:0;\n            width: 100%;\n            background: #fff;\n            border-radius: 5px;\n            list-style: none;\n            margin: 0;\nIE: none;\n            padding: 0;\n            z-index: 1000;\n            transition: opacity 0.2s ease, transform 0.2s ease;\n            opacity: 0;\n            transform: translateY(-10px);\n        }\n\n        .custom-orderby-menu.is-open {\n            display: block;\n            opacity: 1;\n            transform: translateY(0);\n\t\t\twidth:175px;\n        }\n\n        .custom-orderby-item {\n            padding: 10px 5px;\n            cursor: pointer;\n            color: #000;\n            margin: 0 20px;\n            font-weight: normal;\n        }\n        .custom-orderby-item.selected {\n            font-weight: bold;\n        }\n\n        .custom-orderby-item.selected:before {\n            content: '\\f00c';\n            font-family: \"Font Awesome 6 Free\";\n            padding-right: 10%;\n        }\n        .custom-orderby-item:before {\n            content: '';\n            padding-right: 24%;\n        }\n\n        .woocommerce-ordering select.orderby {\n            display: none;\n        }\n    <\/style>\n    <?php\n}\nadd_action('wp_footer', 'modify_wc_ordering');","active":true,"modified":"2025-04-22 14:52:26","revision":"40"}]}